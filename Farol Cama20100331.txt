--Text                                                                                                                                                                                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- 
Use t4bdb01
go
DROP PROCEDURE [t4bsp_farol_backup]
go
CREATE PROCEDURE [t4bsp_farol_backup]
(    
@data_ref DATETIME = NULL,
@write BIT = 1
)    
AS    
/*----------------------------------------------------------    
Tech4B Monitoring Tools for Microsoft SQL Server (R)    
    
Direito de copia (C) 2003-2005 Tech4B Technology for Business. Todos direitos reservados.    
    
Aviso: Este software T protegido pela Lei 9.609/98, de 20 de Fevereiro de 1998 (Lei do Software) combinado com a Lei do Direito Autoral e por tratados internacionais relativos a propriedade intelectual. A reprodutpo, distribuitpo ou utilizatpo nao autoriz
ada

deste programa, ou de qualquer parte dele, resultara na impositpo de rigorosas penas civis e criminais, e sera objeto de atpo judicial promovida na maxima extenspo possfvel, nos termos da lei.    
    
Copyright (C) 2003-2005 Tech4B Technology for Business 2002-2005. All rights reserved.    
    
Warning: This SOFTWARE is protected by copyright law and international treaties. Unauthorized reproduction or distribution of this program, or any portion of it, may result in severe civil and criminal penalties, and will be prosecuted to the maximum exte

  
nt possible under the law.    
any portion of it, may result in severe civil and criminal penalties, and will be prosecuted to the maximum extent possible under the law.    
    
t4bsp_farol_backup    
Verifica se ha algum backup (Dados para todos e Log para bancos com RM=full) com data anterior a @dat_ref. Se houver, retorna data    
de inicio e fim do ultimo backup    
-----------------------------------------------------------*/    
DECLARE @collation_msdb varchar(50),
		@sql_text nvarchar(1000)
    
SET NOCOUNT ON
    
-- Obtendo collation do tempdb, para não dar problema na comparação entre os campos data tabela temporária e os da t4b_procadm_param
CREATE TABLE #Collation (
	coll varchar(50)
)

IF NOT REPLACE(@@VERSION, '  ', ' ') LIKE 'Microsoft SQL Server 7%'
BEGIN
	insert into #Collation (coll)
	exec('SELECT CONVERT(varchar, DATABASEPROPERTYEX(''msdb'', ''Collation''))')
END

SELECT @collation_msdb = ISNULL(coll, '') FROM #Collation

DROP TABLE #Collation


IF @data_ref IS NULL
BEGIN
 SELECT @data_ref = CONVERT(VARCHAR(12),DATEADD(DD,-1,GETDATE()),102)    
END

DECLARE @start DATETIME, 
        @end DATETIME, 
		@datediff INT,
		@hora VARCHAR(2),
		@minuto VARCHAR(2),
		@segundo VARCHAR(2)
    
CREATE TABLE #tabaux (
	server_name VARCHAR(128) NULL,
	database_name VARCHAR(128) NULL,    
	type CHAR(1) NULL,
	backup_start_date DATETIME NULL,
	backup_finish_date DATETIME NULL
)

IF REPLACE(@@version, '  ', ' ') like 'Microsoft SQL Server 7%'
BEGIN
	SET @sql_text = 'INSERT #tabaux
					SELECT  @@SERVERNAME, db.name, ''D'', ISNULL(MAX(backup_start_date), ''19000101''), ISNULL(MAX(backup_finish_date), ''19000101'')    
					FROM  msdb..backupset bkp,    
						  master..sysdatabases db    
					WHERE  bkp.server_name = @@servername
					 AND bkp.type = ''D''
					 AND bkp.database_name =* db.name
					 AND db.name NOT IN (''tempdb'',''pubs'',''Northwind'')
					GROUP BY db.name'
	EXEC(@sql_text)

	SET @sql_text = 'INSERT #tabaux    
					SELECT  @@SERVERNAME,
							db.name,
							''L'',
							MAX(backup_start_date),
							MAX(backup_finish_date)    
					FROM  msdb..backupset bkp,
						  master..sysdatabases db
					WHERE bkp.server_name = @@servername
					AND bkp.type = ''L''
					AND db.name NOT IN (''tempdb'',''pubs'',''Northwind'')
					AND bkp.database_name =* db.name
					AND db.status = db.status & 16    
					GROUP BY db.name'
	EXEC(@sql_text)
END
ELSE
BEGIN
	SET @sql_text = 'INSERT #tabaux
					SELECT  @@SERVERNAME, db.name, ''D'', ISNULL(MAX(backup_start_date), ''19000101''), ISNULL(MAX(backup_finish_date), ''19000101'')    
					FROM  msdb..backupset bkp,    
						  master..sysdatabases db    
					WHERE  bkp.server_name = @@servername
					 AND bkp.type = ''D''
					 AND bkp.database_name =* db.name COLLATE ' + @collation_msdb + '
					 AND db.name NOT IN (''tempdb'',''pubs'',''Northwind'')
					GROUP BY db.name'
	EXEC(@sql_text)

	SET @sql_text = 'INSERT #tabaux    
					SELECT  @@SERVERNAME,
							db.name,
							''L'',
							MAX(backup_start_date),
							MAX(backup_finish_date)    
					FROM  msdb..backupset bkp,
						  master..sysdatabases db
					WHERE bkp.server_name = @@servername
					AND bkp.type = ''L''
					AND db.name NOT IN (''tempdb'',''pubs'',''Northwind'')
					AND bkp.database_name =* db.name COLLATE ' + @collation_msdb + '
					AND db.status = db.status & 16    
					GROUP BY db.name'
	EXEC(@sql_text)
END

DELETE #tabaux    
WHERE type = 'D'
AND backup_start_date BETWEEN @data_ref AND DATEADD(DD, 1, @data_ref)
AND backup_finish_date BETWEEN @data_ref AND DATEADD(DD, 1, @data_ref)    
    
SELECT @data_ref = DATEADD(HH, -1, GETDATE())
    
DELETE #tabaux
WHERE type = 'L'
AND backup_start_date >= @data_ref
AND backup_finish_date >= @data_ref
    
IF @write = 1    
 INSERT  t4btb_hist_farol_backup    
 SELECT GETDATE(), *    
 FROM  #tabaux    
  
SELECT @start = MIN(backup_start_date)
FROM #tabaux 
 
SELECT @end = MAX(backup_finish_date) 
FROM #tabaux

SELECT @datediff = DATEDIFF(ss,@start,@end)

SELECT @hora = CASE 
			WHEN DATEPART(hh,DATEADD(ss,@datediff,'Jan  1 2000  0:00AM')) < 10
			THEN '0' + CONVERT(VARCHAR(2),DATEPART(hh,DATEADD(ss,@datediff,'Jan  1 2000  0:00AM')))
			ELSE	
			CONVERT(VARCHAR(2),DATEPART(hh,DATEADD(ss,@datediff,'Jan  1 2000  0:00AM')))
			END
SELECT @minuto = CASE 
			WHEN DATEPART(mi,DATEADD(ss,@datediff,'Jan  1 2000  0:00AM')) < 10
			THEN '0' + CONVERT(VARCHAR(2),DATEPART(mi,DATEADD(ss,@datediff,'Jan  1 2000  0:00AM')))
			ELSE	
			CONVERT(VARCHAR(2),DATEPART(mi,DATEADD(ss,@datediff,'Jan  1 2000  0:00AM')))
			END
SELECT @segundo = CASE 
			WHEN DATEPART(ss,DATEADD(ss,@datediff,'Jan  1 2000  0:00AM')) < 10
			THEN '0' + CONVERT(VARCHAR(2),DATEPART(ss,DATEADD(ss,@datediff,'Jan  1 2000  0:00AM')))
			ELSE	
			CONVERT(VARCHAR(2),DATEPART(ss,DATEADD(ss,@datediff,'Jan  1 2000  0:00AM')))
			END

SELECT CONVERT(VARCHAR(25),server_name) "server",  
	   CONVERT(VARCHAR(20),database_name) "database",  
	   CONVERT(VARCHAR(1),type) "type",  
	   CONVERT(VARCHAR(19),backup_start_date,120) "backup_start_date",  
	   CONVERT(VARCHAR(19),backup_finish_date,120) "backup_finish_date"  
FROM #tabaux

SELECT @start 'StartTime', @end 'EndTime', @hora + ':' + @minuto + ':' + @segundo 'Total Time (Min)'


